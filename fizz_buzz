Given an integer n, return a string array answer (1-indexed) where:
answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.
Example 1:
Input: n = 3
Output: ["1","2","Fizz"]

Solution:
class Solution {
    var listString = mutableListOf<String>()
    fun fizzBuzz(n: Int): List<String> {
        for (i in 1..n) {
            if(i % 3 == 0 && i % 5 == 0) {
                listString.add("FizzBuzz") 
            } else if(i % 3 == 0) {
                listString.add("Fizz") 
            } else if(i % 5 == 0) {
                listString.add("Buzz") 
            } else {
                listString.add("$i") 
            }
        }
        return listString
    }
}

Peer solution:
class Solution {
    var listString = mutableListOf<String>()
    fun fizzBuzz(n: Int): List<String> {
        return (1..n).map {
            when {
                it % 3 == 0 && it % 5 == 0 -> "FizzBizz"
                it % 5 == 0 -> "Buzz"
                it % 3 == 0 -> "Fizz"
                else -> it.toString()
            }
        }
    }
}
